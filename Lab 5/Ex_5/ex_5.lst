     1                                  bits 32 ; assembling for the 32 bits architecture
     2                                  
     3                                  ; declare the EntryPoint (a label defining the very first instruction of the program)
     4                                  global start        
     5                                  
     6                                  ; declare external functions needed by our program
     7                                  extern exit               ; tell nasm that exit exists even if we won't be defining it
     8                                  import exit msvcrt.dll    
     9                                  
    10                                  ; A character string S is given. Obtain the string D containing all small letters from the string S
    11                                  segment data use32 class=data
    12 00000000 61416242322578216D-         s db 'a', 'A', 'b', 'B', '2', '%', 'x', '!', 'm', 'M', '@'
    12 00000009 4D40               
    13                                      len_s equ $ - s
    14 0000000B 00                          separator db 0
    15 0000000C <res 0000000B>              d resb len_s
    16                                      
    17                                  segment code use32 class=code
    18                                      start:
    19 00000000 BE[00000000]                    mov esi, s
    20 00000005 BF[0C000000]                    mov edi, d
    21 0000000A FC                              cld
    22                                          
    23 0000000B B90B000000                      mov ecx, len_s
    24 00000010 E310                            jecxz fin
    25                                          
    26                                          parse_string_s:
    27 00000012 8A06                                mov al, [esi]
    28                                              
    29 00000014 3C61                                cmp al, 'a'
    30 00000016 7207                                jb not_small_letter
    31                                              
    32 00000018 3C7A                                cmp al, 'z'
    33 0000001A 7703                                ja not_small_letter
    34                                              
    35 0000001C A4                                  movsb
    36 0000001D EB01                                jmp fin_of_parsing
    37                                              
    38                                              not_small_letter:
    39 0000001F 46                                      inc esi
    40                                                  
    41                                              fin_of_parsing:
    42 00000020 E2F0                                    loop parse_string_s
    43                                          fin:
    44 00000022 6A00                            push    dword 0      ; push the parameter for exit onto the stack
    45 00000024 FF15[00000000]                  call    [exit]       ; call exit to terminate the program
