     1                                  bits 32 ; assembling for the 32 bits architecture
     2                                  
     3                                  ; declare the EntryPoint (a label defining the very first instruction of the program)
     4                                  global start        
     5                                  
     6                                  ; declare external functions needed by our program
     7                                  extern exit               ; tell nasm that exit exists even if we won't be defining it
     8                                  import exit msvcrt.dll    ; exit is a function that ends the calling process. It is defined in msvcrt.dll
     9                                                            ; msvcrt.dll contains exit, printf and all the other important C-runtime specific functions
    10                                  
    11                                  ; a,b,c,d - word - ex. 1
    12                                  ; (c+b+b)-(c+a+d)
    13                                  segment data use32 class=data
    14 00000000 C800                        a dw 200
    15 00000002 F401                        c dw 500
    16 00000004 FA00                        b dw 250
    17 00000006 C800                        d dw 200
    18                                  
    19                                  ; our code starts here
    20                                  segment code use32 class=code
    21                                      start:
    22 00000000 66A1[02000000]                  mov ax, [c]
    23 00000006 660305[04000000]                add ax, [b]
    24 0000000D 660305[04000000]                add ax, [b] ; ax = c + b + b
    25                                          
    26 00000014 668B1D[02000000]                mov bx, [c]
    27 0000001B 66031D[00000000]                add bx, [a]
    28 00000022 66031D[06000000]                add bx, [d] ; bx = c + a + d
    29 00000029 6629D8                          sub ax, bx
    30                                          
    31                                          ; exit(0)
    32 0000002C 6A00                            push    dword 0      ; push the parameter for exit onto the stack
    33 0000002E FF15[00000000]                  call    [exit]       ; call exit to terminate the program
