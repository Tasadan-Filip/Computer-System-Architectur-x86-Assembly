     1                                  bits 32 ; assembling for the 32 bits architecture
     2                                  
     3                                  ; declare the EntryPoint (a label defining the very first instruction of the program)
     4                                  global start        
     5                                  
     6                                  ; declare external functions needed by our program
     7                                  extern exit, fopen, fread, fclose, fprintf
     8                                  
     9                                  import exit msvcrt.dll    
    10                                  import fopen msvcrt.dll
    11                                  import fclose msvcrt.dll
    12                                  import fprintf msvcrt.dll
    13                                  import fread msvcrt.dll
    14                                  
    15                                  ; Write a program that reads a text file that contains sentences (sentences are separated by character '/') and writes in a different file only the sentences of idex of the form 2k + 1 (i.e. write sentences 1, 3, 5,
    16                                  segment data use32 class=data
    17 00000000 00                          last_char db 0
    18 00000001 736F757263655F6669-         source_file_name db "source_file.txt", 0
    18 0000000A 6C652E74787400     
    19 00000011 726573756C745F6669-         result_file_name db "result_file.txt", 0
    19 0000001A 6C652E74787400     
    20 00000021 7200                        read_open_format db "r", 0 
    21 00000023 7700                        write_open_format db "w", 0
    22 00000025 <res 00000004>              source_file_descriptor resd 1
    23 00000029 <res 00000004>              result_file_descriptor resd 1
    24                                      len equ 100
    25 0000002D <res 00000064>              buffer resb len
    26 00000091 256300                      format_char db "%c", 0
    27                                      
    28                                  segment code use32 class=code
    29                                      start:
    30                                          ; Step 1: open first file 
    31                                          
    32 00000000 68[21000000]                    push dword read_open_format
    33 00000005 68[01000000]                    push dword source_file_name
    34 0000000A FF15[00000000]                  call [fopen]
    35 00000010 83C408                          add esp, 4 * 2
    36                                          
    37 00000013 A3[25000000]                    mov dword [source_file_descriptor], eax
    38                                          
    39 00000018 83F800                          cmp eax, 0
    40 0000001B 0F84A3000000                    je fin
    41                                          
    42                                          ; Step 2: open second file 
    43                                          
    44 00000021 68[23000000]                    push dword write_open_format
    45 00000026 68[11000000]                    push dword result_file_name
    46 0000002B FF15[00000000]                  call [fopen]
    47 00000031 83C408                          add esp, 4 * 2
    48                                          
    49 00000034 A3[29000000]                    mov dword [result_file_descriptor], eax
    50                                          
    51 00000039 83F800                          cmp eax, 0
    52 0000003C 0F8482000000                    je fin
    53                                          
    54                                          ; Step 3 read all chars from file
    55                                          
    56 00000042 BB01000000                      mov ebx, 1 ; ebx will be the counter of current sentence
    57                                          
    58                                          loop_to_read_all_chars:
    59 00000047 FF35[25000000]                      push dword [source_file_descriptor]
    60 0000004D 6A64                                push dword len
    61 0000004F 6A01                                push 1
    62 00000051 68[2D000000]                        push buffer
    63 00000056 FF15[00000000]                      call [fread]
    64 0000005C 83C410                              add esp, 4 * 4
    65                                              
    66 0000005F 83F800                              cmp eax, 0
    67 00000062 7442                                je close_files
    68                                              
    69 00000064 BE[2D000000]                        mov esi, buffer
    70 00000069 89C1                                mov ecx, eax
    71                                              
    72                                              parse_buffer:
    73 0000006B 51                                      push ecx
    74 0000006C B800000000                              mov eax, 0
    75 00000071 AC                                      lodsb ; move the byte from DS:ESI into AL
    76                                                  
    77 00000072 3C00                                    cmp al, 0
    78 00000074 742E                                    je fin_of_parse_buffer
    79                                                  
    80 00000076 3C2F                                    cmp al, '/'
    81 00000078 7426                                    je new_sentence
    82                                                  
    83 0000007A F7C301000000                            test ebx, 1
    84 00000080 7502                                    jnz print_sentence_to_destination_file
    85 00000082 EB1D                                    jmp last_command_of_parse_buffer
    86                                                  
    87                                                  print_sentence_to_destination_file:
    88 00000084 A2[00000000]                                mov [last_char], al
    89 00000089 50                                          push eax
    90 0000008A 68[91000000]                                push format_char
    91 0000008F FF35[29000000]                              push dword [result_file_descriptor]
    92 00000095 FF15[00000000]                              call [fprintf]
    93 0000009B 83C40C                                      add esp, 4 * 3
    94 0000009E EB01                                        jmp last_command_of_parse_buffer
    95                                                  
    96                                                  new_sentence:
    97 000000A0 43                                          inc ebx
    98                                                      
    99                                                  last_command_of_parse_buffer:
   100 000000A1 59                                      pop ecx
   101 000000A2 E2C7                                    loop parse_buffer
   102                                                  
   103                                              fin_of_parse_buffer:
   104 000000A4 EBA1                                    jmp loop_to_read_all_chars
   105                                              
   106                                          close_files:
   107 000000A6 FF35[25000000]                      push dword [source_file_descriptor]
   108 000000AC FF15[00000000]                      call [fclose]
   109 000000B2 83C404                              add esp, 4 * 1
   110                                              
   111 000000B5 FF35[29000000]                      push dword [result_file_descriptor]
   112 000000BB FF15[00000000]                      call [fclose]
   113 000000C1 83C404                              add esp, 4 * 1
   114                                          fin:
   115 000000C4 6A00                            push    dword 0      ; push the parameter for exit onto the stack
   116 000000C6 FF15[00000000]                  call    [exit]       ; call exit to terminate the program
