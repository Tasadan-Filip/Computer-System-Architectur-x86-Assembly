     1                                  bits 32 ; assembling for the 32 bits architecture
     2                                  
     3                                  ; declare the EntryPoint (a label defining the very first instruction of the program)
     4                                  global start        
     5                                  
     6                                  ; declare external functions needed by our program
     7                                  extern exit               ; tell nasm that exit exists even if we won't be defining it
     8                                  import exit msvcrt.dll    ; exit is a function that ends the calling process. It is 
     9                                  
    10                                  
    11                                  ; Given the words A and B, compute the doubleword C as follows:
    12                                  ; the bits 0-2 of C are the same as the bits 12-14 of A
    13                                  ; the bits 3-8 of C are the same as the bits 0-5 of B
    14                                  ; the bits 9-15 of C are the same as the bits 3-9 of A
    15                                  ; the bits 16-31 of C are the same as the bits of A
    16                                  segment data use32 class=data
    17                                  
    18 00000000 <res 00000004>                  c resd 1
    19 00000004 4852                            a dw 101001001001000b
    20 00000006 0A00                            b dw 01010b
    21                                          
    22                                  segment code use32 class=code
    23                                      start:
    24 00000000 668B1D[04000000]                mov bx, [a]
    25                                          
    26 00000007 66A1[04000000]                  mov ax, [a]
    27 0000000D 66C1E80C                        shr ax, 12
    28 00000011 6683E007                        and ax, 111b
    29 00000015 66A3[00000000]                  mov [c], ax ; the bits 0-2 of C are the same as the bits 12-14 of A
    30                                          
    31 0000001B 66A1[06000000]                  mov ax, [b]
    32 00000021 6683E01F                        and ax, 11111b
    33 00000025 66C1E003                        shl ax, 3
    34 00000029 660905[00000000]                or [c], ax ; the bits 3-8 of C are the same as the bits 0-5 of B
    35                                          
    36 00000030 66A1[04000000]                  mov ax, [a]
    37 00000036 66C1E803                        shr ax, 3
    38 0000003A 6683E07F                        and ax, 1111111b
    39 0000003E 66C1E009                        shl ax, 9
    40 00000042 660905[00000000]                or [c], ax
    41                                          
    42 00000049 66891D[02000000]                mov [c + 2], bx
    43                                              
    44                                          ; exit(0)
    45 00000050 6A00                            push    dword 0      ; push the parameter for exit onto the stack
    46 00000052 FF15[00000000]                  call    [exit]       ; call exit to terminate the program
