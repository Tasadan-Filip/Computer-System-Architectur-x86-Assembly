     1                                  bits 32 ; assembling for the 32 bits architecture
     2                                  
     3                                  ; declare the EntryPoint (a label defining the very first instruction of the program)
     4                                  global start        
     5                                  
     6                                  ; declare external functions needed by our program
     7                                  extern exit               ; tell nasm that exit exists even if we won't be defining it
     8                                  import exit msvcrt.dll    ; exit is a function that ends the calling process. It is defined in msvcrt.dll
     9                                                            ; msvcrt.dll contains exit, printf and all the other important C-runtime specific functions
    10                                  
    11                                  ; a,b,c,d-byte, e,f,g,h-word
    12                                  ; (a*d+e)/[c+h/(c-b)]
    13                                  
    14                                  segment data use32 class=data
    15 00000000 05                          a db 5
    16 00000001 14                          d db 20
    17 00000002 6400                        e dw 100
    18 00000004 14                          c db 20
    19 00000005 0A                          b db 10
    20 00000006 3200                        h dw 50
    21                                      
    22                                  
    23                                  ; our code starts here
    24                                  segment code use32 class=code
    25                                      start:
    26 00000000 A0[00000000]                    mov al, [a]
    27 00000005 F625[01000000]                  mul byte [d]
    28                                          
    29 0000000B 660305[02000000]                add ax, [e] ; ax = (a*d+e) (ax = 200)
    30                                          
    31 00000012 6689C3                          mov bx, ax; bx = (a*d+e) (bx = 200)
    32                                          
    33 00000015 66A1[06000000]                  mov ax, [h]
    34                                          
    35 0000001B 8A0D[04000000]                  mov cl, [c]
    36 00000021 2A0D[05000000]                  sub cl, [b]
    37                                          
    38 00000027 F6F1                            div cl ; al = h/(c-b) (al = 5)
    39                                          
    40 00000029 0205[04000000]                  add al, [c] ; al = c+h/(c-b) (al = 25)
    41                                          
    42 0000002F 88C1                            mov cl, al
    43 00000031 6689D8                          mov ax, bx ;ax = (a*d+e) (ax = 200)
    44 00000034 F6F1                            div cl ; ax = (a*d+e)/[ c+h/(c-b) ]
    45                                          ; al = 8
    46                                          
    47                                      
    48                                          ; exit(0)
    49 00000036 6A00                            push    dword 0      ; push the parameter for exit onto the stack
    50 00000038 FF15[00000000]                  call    [exit]       ; call exit to terminate the program
