     1                                  bits 32 ; assembling for the 32 bits architecture
     2                                  
     3                                  ; declare the EntryPoint (a label defining the very first instruction of the program)
     4                                  global start        
     5                                  
     6                                  ; declare external functions needed by our program
     7                                  extern exit               ; tell nasm that exit exists even if we won't be defining it
     8                                  import exit msvcrt.dll    
     9                                  
    10                                  ; Given the word A and the byte B, compute the doubleword C as follows:
    11                                  ; the bits 0-3 of C are the same as the bits 6-9 of A
    12                                  ; the bits 4-5 of C have the value 1
    13                                  ; the bits 6-7 of C are the same as the bits 1-2 of B
    14                                  ; the bits 8-23 of C are the same as the bits of A
    15                                  ; the bits 24-31 of C are the same as the bits of B
    16                                  
    17                                  segment data use32 class=data
    18 00000000 <res 00000004>              c resd 1
    19 00000004 9608                        a dw 100010010110b
    20 00000006 06                          b db 110b
    21                                      
    22                                  segment code use32 class=code
    23                                      start:
    24                                          
    25 00000000 66A1[04000000]                  mov ax, [a]
    26 00000006 66C1E806                        shr ax, 6
    27 0000000A 240F                            and al, 1111b
    28 0000000C A2[00000000]                    mov byte [c], al ; the bits 0-3 of C are the same as the bits 6-9 of A
    29                                          
    30 00000011 800D[00000000]30                or byte [c], 110000b ; the bits 4-5 of C have the value 1
    31                                          
    32 00000018 A0[06000000]                    mov al, [b]
    33 0000001D D0E8                            shr al, 1
    34 0000001F 2403                            and al, 11b
    35 00000021 C0E006                          shl al, 6
    36 00000024 0805[00000000]                  or byte [c], al ; the bits 6-7 of C are the same as the bits 1-2 of B
    37                                          
    38 0000002A 66A1[04000000]                  mov ax, [a]
    39 00000030 66A3[01000000]                  mov word [c + 1], ax ; the bits 8-23 of C are the same as the bits of A
    40                                          
    41 00000036 A0[06000000]                    mov al, [b]
    42 0000003B A2[03000000]                    mov byte [c + 3], al ; the bits 24-31 of C are the same as the bits of B
    43                                          
    44 00000040 6A00                            push    dword 0      ; push the parameter for exit onto the stack
    45 00000042 FF15[00000000]                  call    [exit]       ; call exit to terminate the program
