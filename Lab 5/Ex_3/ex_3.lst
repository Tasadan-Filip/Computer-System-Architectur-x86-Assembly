     1                                  bits 32 ; assembling for the 32 bits architecture
     2                                  
     3                                  ; declare the EntryPoint (a label defining the very first instruction of the program)
     4                                  global start        
     5                                  
     6                                  ; declare external functions needed by our program
     7                                  extern exit               ; tell nasm that exit exists even if we won't be defining it
     8                                  import exit msvcrt.dll    
     9                                  
    10                                  ;Two byte strings S1 and S2 are given. Obtain the string D by concatenating the elements of S1 from the left hand side to the right hand side and the elements of S2 from the right hand side to the left hand side.
    11                                  segment data use32 class=data
    12 00000000 01020304                    s1 db 1, 2, 3, 4
    13                                      len_s1 equ $ - s1
    14 00000004 050607                      s2 db 5, 6, 7
    15                                      len_s2 equ $ - s2
    16 00000007 <res 00000007>              d resb len_s1 + len_s2
    17                                      
    18                                  segment code use32 class=code
    19                                      start:
    20 00000000 BE[00000000]                    mov esi, s1
    21 00000005 BF[07000000]                    mov edi, d
    22                                          
    23 0000000A FC                              cld
    24 0000000B B904000000                      mov ecx, len_s1
    25                                          
    26                                          parse_string_1:
    27 00000010 A4                                  movsb ; move the byte from DS:ESI to DS:EDI
    28 00000011 E2FD                                loop parse_string_1
    29                                          
    30 00000013 BE[04000000]                    mov esi, s2
    31 00000018 83C602                          add esi, len_s2 - 1
    32                                          
    33 0000001B FD                              std
    34 0000001C B903000000                      mov ecx, len_s2
    35                                         
    36                                          parse_string_2:
    37 00000021 AC                                  lodsb ; move the byte from DS:ESI into AL
    38 00000022 8807                                mov byte [edi], al
    39                                              
    40 00000024 47                                  inc edi
    41 00000025 E2FA                                loop parse_string_2
    42                                          
    43                                          
    44 00000027 6A00                            push    dword 0      ; push the parameter for exit onto the stack
    45 00000029 FF15[00000000]                  call    [exit]       ; call exit to terminate the program
